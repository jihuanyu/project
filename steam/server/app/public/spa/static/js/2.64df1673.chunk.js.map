{"version":3,"sources":["../node_modules/dom-scroll-into-view/lib/index.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../node_modules/dom-scroll-into-view/lib/dom-scroll-into-view.js","../node_modules/dom-scroll-into-view/lib/util.js"],"names":["module","exports","__webpack_require__","global","MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","this","__entries__","Object","defineProperty","prototype","get","length","enumerable","configurable","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","call","isBrowser","window","document","global$1","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","target","props","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","create","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","apply","__webpack_exports__","util","elem","container","config","nodeType","getWindow","allowHorizontalScroll","onlyScrollIfNeeded","alignWithTop","alignWithLeft","offsetTop","offsetLeft","offsetBottom","offsetRight","undefined","isWin","isWindow","elemOffset","offset","eh","outerHeight","ew","outerWidth","containerOffset","ch","cw","containerScroll","diffTop","diffBottom","win","winScroll","ww","wh","scrollLeft","scrollTop","css","_extends","assign","i","source","hasOwnProperty","_typeof","Symbol","iterator","obj","constructor","getScroll","w","ret","d","body","getScrollLeft","getScrollTop","getOffset","el","pos","box","doc","docElem","getBoundingClientRect","clientLeft","clientTop","getClientPosition","parentWindow","_RE_NUM_NO_PX","RegExp","RE_POS","CURRENT_STYLE","RUNTIME_STYLE","LEFT","PX","getComputedStyleX","each","fn","isBorderBoxFn","name","computedStyle_","val","computedStyle","getPropertyValue","test","style","rsLeft","pixelLeft","BOX_MODELS","CONTENT_INDEX","PADDING_INDEX","BORDER_INDEX","getPBMWidth","which","prop","j","cssProp","domUtils","getWH","extra","viewportWidth","viewportHeight","docWidth","docHeight","borderBoxValue","offsetWidth","offsetHeight","isBorderBox","cssBoxValue","Number","borderBoxValueOrIsBorderBox","padding","slice","refWin","max","documentElementProp","compatMode","cssShow","visibility","display","getWHIgnoreDisplay","args","options","old","swap","v","first","charAt","toUpperCase","includeMargin","node","current","setOffset","clone","overflow","scrollTo"],"mappings":"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","file":"static/js/2.64df1673.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./dom-scroll-into-view');","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = function () {\n  if (typeof Map !== 'undefined') {\n    return Map;\n  }\n  /**\r\n   * Returns index in provided array that matches the specified key.\r\n   *\r\n   * @param {Array<Array>} arr\r\n   * @param {*} key\r\n   * @returns {number}\r\n   */\n\n\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function (entry, index) {\n      if (entry[0] === key) {\n        result = index;\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n\n  return (\n    /** @class */\n    function () {\n      function class_1() {\n        this.__entries__ = [];\n      }\n\n      Object.defineProperty(class_1.prototype, \"size\", {\n        /**\r\n         * @returns {boolean}\r\n         */\n        get: function get() {\n          return this.__entries__.length;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      /**\r\n       * @param {*} key\r\n       * @returns {*}\r\n       */\n\n      class_1.prototype.get = function (key) {\n        var index = getIndex(this.__entries__, key);\n        var entry = this.__entries__[index];\n        return entry && entry[1];\n      };\n      /**\r\n       * @param {*} key\r\n       * @param {*} value\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.set = function (key, value) {\n        var index = getIndex(this.__entries__, key);\n\n        if (~index) {\n          this.__entries__[index][1] = value;\n        } else {\n          this.__entries__.push([key, value]);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.delete = function (key) {\n        var entries = this.__entries__;\n        var index = getIndex(entries, key);\n\n        if (~index) {\n          entries.splice(index, 1);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.has = function (key) {\n        return !!~getIndex(this.__entries__, key);\n      };\n      /**\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.clear = function () {\n        this.__entries__.splice(0);\n      };\n      /**\r\n       * @param {Function} callback\r\n       * @param {*} [ctx=null]\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.forEach = function (callback, ctx) {\n        if (ctx === void 0) {\n          ctx = null;\n        }\n\n        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\n          var entry = _a[_i];\n          callback.call(ctx, entry[1], entry[0]);\n        }\n      };\n\n      return class_1;\n    }()\n  );\n}();\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\n\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document; // Returns global object of a current environment.\n\nvar global$1 = function () {\n  if (typeof global !== 'undefined' && global.Math === Math) {\n    return global;\n  }\n\n  if (typeof self !== 'undefined' && self.Math === Math) {\n    return self;\n  }\n\n  if (typeof window !== 'undefined' && window.Math === Math) {\n    return window;\n  } // eslint-disable-next-line no-new-func\n\n\n  return Function('return this')();\n}();\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\n\n\nvar requestAnimationFrame$1 = function () {\n  if (typeof requestAnimationFrame === 'function') {\n    // It's required to use a bounded function because IE sometimes throws\n    // an \"Invalid calling object\" error if rAF is invoked without the global\n    // object on the left hand side.\n    return requestAnimationFrame.bind(global$1);\n  }\n\n  return function (callback) {\n    return setTimeout(function () {\n      return callback(Date.now());\n    }, 1000 / 60);\n  };\n}(); // Defines minimum timeout before adding a trailing call.\n\n\nvar trailingTimeout = 2;\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\n\nfunction throttle(callback, delay) {\n  var leadingCall = false,\n      trailingCall = false,\n      lastCallTime = 0;\n  /**\r\n   * Invokes the original callback function and schedules new invocation if\r\n   * the \"proxy\" was called during current request.\r\n   *\r\n   * @returns {void}\r\n   */\n\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  /**\r\n   * Callback invoked after the specified delay. It will further postpone\r\n   * invocation of the original function delegating it to the\r\n   * requestAnimationFrame.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  /**\r\n   * Schedules invocation of the original function.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function proxy() {\n    var timeStamp = Date.now();\n\n    if (leadingCall) {\n      // Reject immediately following calls.\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      } // Schedule new call to be in invoked when the pending one is resolved.\n      // This is important for \"transitions\" which never actually start\n      // immediately so there is a chance that we might miss one if change\n      // happens amids the pending invocation.\n\n\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n\n    lastCallTime = timeStamp;\n  }\n\n  return proxy;\n} // Minimum delay before invoking the update of observers.\n\n\nvar REFRESH_DELAY = 20; // A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\n\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight']; // Check if MutationObserver is available.\n\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\n\nvar ResizeObserverController =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserverController.\r\n   *\r\n   * @private\r\n   */\n  function ResizeObserverController() {\n    /**\r\n     * Indicates whether DOM listeners have been added.\r\n     *\r\n     * @private {boolean}\r\n     */\n    this.connected_ = false;\n    /**\r\n     * Tells that controller has subscribed for Mutation Events.\r\n     *\r\n     * @private {boolean}\r\n     */\n\n    this.mutationEventsAdded_ = false;\n    /**\r\n     * Keeps reference to the instance of MutationObserver.\r\n     *\r\n     * @private {MutationObserver}\r\n     */\n\n    this.mutationsObserver_ = null;\n    /**\r\n     * A list of connected observers.\r\n     *\r\n     * @private {Array<ResizeObserverSPI>}\r\n     */\n\n    this.observers_ = [];\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n  }\n  /**\r\n   * Adds observer to observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be added.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n      this.observers_.push(observer);\n    } // Add listeners if they haven't been added yet.\n\n\n    if (!this.connected_) {\n      this.connect_();\n    }\n  };\n  /**\r\n   * Removes observer from observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer); // Remove observer if it's present in registry.\n\n    if (~index) {\n      observers.splice(index, 1);\n    } // Remove listeners if controller has no connected observers.\n\n\n    if (!observers.length && this.connected_) {\n      this.disconnect_();\n    }\n  };\n  /**\r\n   * Invokes the update of observers. It will continue running updates insofar\r\n   * it detects changes.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_(); // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n\n    if (changesDetected) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Updates every observer from observers list and notifies them of queued\r\n   * entries.\r\n   *\r\n   * @private\r\n   * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n   *      dimensions of it's elements.\r\n   */\n\n\n  ResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n      return observer.gatherActive(), observer.hasActive();\n    }); // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n\n    activeObservers.forEach(function (observer) {\n      return observer.broadcastActive();\n    });\n    return activeObservers.length > 0;\n  };\n  /**\r\n   * Initializes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n      return;\n    } // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n\n\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n      this.mutationsObserver_ = new MutationObserver(this.refresh);\n      this.mutationsObserver_.observe(document, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    } else {\n      document.addEventListener('DOMSubtreeModified', this.refresh);\n      this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n  };\n  /**\r\n   * Removes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n      return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n      this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n      document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n  };\n  /**\r\n   * \"Transitionend\" event handler.\r\n   *\r\n   * @private\r\n   * @param {TransitionEvent} event\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\n    var _b = _a.propertyName,\n        propertyName = _b === void 0 ? '' : _b; // Detect whether transition may affect dimensions of an element.\n\n    var isReflowProperty = transitionKeys.some(function (key) {\n      return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Returns instance of the ResizeObserverController.\r\n   *\r\n   * @returns {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n      this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n  };\n  /**\r\n   * Holds reference to the controller's instance.\r\n   *\r\n   * @private {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.instance_ = null;\n  return ResizeObserverController;\n}();\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\n\n\nvar defineConfigurable = function defineConfigurable(target, props) {\n  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n    var key = _a[_i];\n    Object.defineProperty(target, key, {\n      value: props[key],\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n  }\n\n  return target;\n};\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\n\n\nvar getWindowOf = function getWindowOf(target) {\n  // Assume that the element is an instance of Node, which means that it\n  // has the \"ownerDocument\" property from which we can retrieve a\n  // corresponding global object.\n  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView; // Return the local global object if it's not possible extract one from\n  // provided element.\n\n  return ownerGlobal || global$1;\n}; // Placeholder of an empty content rectangle.\n\n\nvar emptyRect = createRectInit(0, 0, 0, 0);\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\n\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\n\n\nfunction getBordersSize(styles) {\n  var positions = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n\n  return positions.reduce(function (size, position) {\n    var value = styles['border-' + position + '-width'];\n    return size + toFloat(value);\n  }, 0);\n}\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\n\n\nfunction getPaddings(styles) {\n  var positions = ['top', 'right', 'bottom', 'left'];\n  var paddings = {};\n\n  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n    var position = positions_1[_i];\n    var value = styles['padding-' + position];\n    paddings[position] = toFloat(value);\n  }\n\n  return paddings;\n}\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getHTMLElementContentRect(target) {\n  // Client width & height properties can't be\n  // used exclusively as they provide rounded values.\n  var clientWidth = target.clientWidth,\n      clientHeight = target.clientHeight; // By this condition we can catch all non-replaced inline, hidden and\n  // detached elements. Though elements with width & height properties less\n  // than 0.5 will be discarded as well.\n  //\n  // Without it we would need to implement separate methods for each of\n  // those cases and it's not possible to perform a precise and performance\n  // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n  // gives wrong results for elements with width & height less than 0.5.\n\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom; // Computed styles of width & height are being used because they are the\n  // only dimensions available to JS that contain non-rounded values. It could\n  // be possible to utilize the getBoundingClientRect if only it's data wasn't\n  // affected by CSS transformations let alone paddings, borders and scroll bars.\n\n  var width = toFloat(styles.width),\n      height = toFloat(styles.height); // Width & height include paddings and borders when the 'border-box' box\n  // model is applied (except for IE).\n\n  if (styles.boxSizing === 'border-box') {\n    // Following conditions are required to handle Internet Explorer which\n    // doesn't include paddings and borders to computed CSS dimensions.\n    //\n    // We can say that if CSS dimensions + paddings are equal to the \"client\"\n    // properties then it's either IE, and thus we don't need to subtract\n    // anything, or an element merely doesn't have paddings/borders styles.\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, 'left', 'right') + horizPad;\n    }\n\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n    }\n  } // Following steps can't be applied to the document's root element as its\n  // client[Width/Height] properties represent viewport area of the window.\n  // Besides, it's as well not necessary as the <html> itself neither has\n  // rendered scroll bars nor it can be clipped.\n\n\n  if (!isDocumentElement(target)) {\n    // In some browsers (only in Firefox, actually) CSS width & height\n    // include scroll bars size which can be removed at this step as scroll\n    // bars are the only difference between rounded dimensions + paddings\n    // and \"client\" properties, though that is not always true in Chrome.\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight; // Chrome has a rather weird rounding of \"client\" properties.\n    // E.g. for an element with content width of 314.2px it sometimes gives\n    // the client width of 315px and for the width of 314.7px it may give\n    // 314px. And it doesn't happen all the time. So just ignore this delta\n    // as a non-relevant.\n\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nvar isSVGGraphicsElement = function () {\n  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n  // interface.\n  if (typeof SVGGraphicsElement !== 'undefined') {\n    return function (target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  } // If it's so, then check that element is at least an instance of the\n  // SVGElement and that it has the \"getBBox\" method.\n  // eslint-disable-next-line no-extra-parens\n\n\n  return function (target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';\n  };\n}();\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n\n  return getHTMLElementContentRect(target);\n}\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\n\n\nfunction createReadOnlyRect(_a) {\n  var x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height; // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n\n  var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype); // Rectangle's properties are not writable and non-enumerable.\n\n  defineConfigurable(rect, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x\n  });\n  return rect;\n}\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction createRectInit(x, y, width, height) {\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\n\n\nvar ResizeObservation =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObservation.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   */\n  function ResizeObservation(target) {\n    /**\r\n     * Broadcasted width of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n    this.broadcastWidth = 0;\n    /**\r\n     * Broadcasted height of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n\n    this.broadcastHeight = 0;\n    /**\r\n     * Reference to the last observed content rectangle.\r\n     *\r\n     * @private {DOMRectInit}\r\n     */\n\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n    this.target = target;\n  }\n  /**\r\n   * Updates content rectangle and tells whether it's width or height properties\r\n   * have changed since the last broadcast.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n    this.contentRect_ = rect;\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n  };\n  /**\r\n   * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n   * from the corresponding properties of the last observed content rectangle.\r\n   *\r\n   * @returns {DOMRectInit} Last observed content rectangle.\r\n   */\n\n\n  ResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n    return rect;\n  };\n\n  return ResizeObservation;\n}();\n\nvar ResizeObserverEntry =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObserverEntry.\r\n   *\r\n   * @param {Element} target - Element that is being observed.\r\n   * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n   */\n  function ResizeObserverEntry(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit); // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n\n    defineConfigurable(this, {\n      target: target,\n      contentRect: contentRect\n    });\n  }\n\n  return ResizeObserverEntry;\n}();\n\nvar ResizeObserverSPI =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n   *      when one of the observed elements changes it's content dimensions.\r\n   * @param {ResizeObserverController} controller - Controller instance which\r\n   *      is responsible for the updates of observer.\r\n   * @param {ResizeObserver} callbackCtx - Reference to the public\r\n   *      ResizeObserver instance which will be passed to callback function.\r\n   */\n  function ResizeObserverSPI(callback, controller, callbackCtx) {\n    /**\r\n     * Collection of resize observations that have detected changes in dimensions\r\n     * of elements.\r\n     *\r\n     * @private {Array<ResizeObservation>}\r\n     */\n    this.activeObservations_ = [];\n    /**\r\n     * Registry of the ResizeObservation instances.\r\n     *\r\n     * @private {Map<Element, ResizeObservation>}\r\n     */\n\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n  }\n  /**\r\n   * Starts observing provided element.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is already being observed.\n\n    if (observations.has(target)) {\n      return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n    this.controller_.addObserver(this); // Force the update of observations.\n\n    this.controller_.refresh();\n  };\n  /**\r\n   * Stops observing provided element.\r\n   *\r\n   * @param {Element} target - Element to stop observing.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is not being observed.\n\n    if (!observations.has(target)) {\n      return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n      this.controller_.removeObserver(this);\n    }\n  };\n  /**\r\n   * Stops observing all elements.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n  };\n  /**\r\n   * Collects observation instances the associated element of which has changed\r\n   * it's content rectangle.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.gatherActive = function () {\n    var _this = this;\n\n    this.clearActive();\n    this.observations_.forEach(function (observation) {\n      if (observation.isActive()) {\n        _this.activeObservations_.push(observation);\n      }\n    });\n  };\n  /**\r\n   * Invokes initial callback function with a list of ResizeObserverEntry\r\n   * instances collected from active resize observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n      return;\n    }\n\n    var ctx = this.callbackCtx_; // Create ResizeObserverEntry instance for every active observation.\n\n    var entries = this.activeObservations_.map(function (observation) {\n      return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n  };\n  /**\r\n   * Clears the collection of active observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n  };\n  /**\r\n   * Tells whether observer has active observations.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n  };\n\n  return ResizeObserverSPI;\n}(); // Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\n\n\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\n\nvar ResizeObserver =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n   *      dimensions of the observed elements change.\r\n   */\n  function ResizeObserver(callback) {\n    if (!(this instanceof ResizeObserver)) {\n      throw new TypeError('Cannot call a class as a function.');\n    }\n\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n    observers.set(this, observer);\n  }\n\n  return ResizeObserver;\n}(); // Expose public methods of ResizeObserver.\n\n\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n  ResizeObserver.prototype[method] = function () {\n    var _a;\n\n    return (_a = observers.get(this))[method].apply(_a, arguments);\n  };\n});\n\nvar index = function () {\n  // Export existing implementation if available.\n  if (typeof global$1.ResizeObserver !== 'undefined') {\n    return global$1.ResizeObserver;\n  }\n\n  return ResizeObserver;\n}();\n\nexport default index;","'use strict';\n\nvar util = require('./util');\n\nfunction scrollIntoView(elem, container, config) {\n  config = config || {}; // document 归一化到 window\n\n  if (container.nodeType === 9) {\n    container = util.getWindow(container);\n  }\n\n  var allowHorizontalScroll = config.allowHorizontalScroll;\n  var onlyScrollIfNeeded = config.onlyScrollIfNeeded;\n  var alignWithTop = config.alignWithTop;\n  var alignWithLeft = config.alignWithLeft;\n  var offsetTop = config.offsetTop || 0;\n  var offsetLeft = config.offsetLeft || 0;\n  var offsetBottom = config.offsetBottom || 0;\n  var offsetRight = config.offsetRight || 0;\n  allowHorizontalScroll = allowHorizontalScroll === undefined ? true : allowHorizontalScroll;\n  var isWin = util.isWindow(container);\n  var elemOffset = util.offset(elem);\n  var eh = util.outerHeight(elem);\n  var ew = util.outerWidth(elem);\n  var containerOffset = undefined;\n  var ch = undefined;\n  var cw = undefined;\n  var containerScroll = undefined;\n  var diffTop = undefined;\n  var diffBottom = undefined;\n  var win = undefined;\n  var winScroll = undefined;\n  var ww = undefined;\n  var wh = undefined;\n\n  if (isWin) {\n    win = container;\n    wh = util.height(win);\n    ww = util.width(win);\n    winScroll = {\n      left: util.scrollLeft(win),\n      top: util.scrollTop(win)\n    }; // elem 相对 container 可视视窗的距离\n\n    diffTop = {\n      left: elemOffset.left - winScroll.left - offsetLeft,\n      top: elemOffset.top - winScroll.top - offsetTop\n    };\n    diffBottom = {\n      left: elemOffset.left + ew - (winScroll.left + ww) + offsetRight,\n      top: elemOffset.top + eh - (winScroll.top + wh) + offsetBottom\n    };\n    containerScroll = winScroll;\n  } else {\n    containerOffset = util.offset(container);\n    ch = container.clientHeight;\n    cw = container.clientWidth;\n    containerScroll = {\n      left: container.scrollLeft,\n      top: container.scrollTop\n    }; // elem 相对 container 可视视窗的距离\n    // 注意边框, offset 是边框到根节点\n\n    diffTop = {\n      left: elemOffset.left - (containerOffset.left + (parseFloat(util.css(container, 'borderLeftWidth')) || 0)) - offsetLeft,\n      top: elemOffset.top - (containerOffset.top + (parseFloat(util.css(container, 'borderTopWidth')) || 0)) - offsetTop\n    };\n    diffBottom = {\n      left: elemOffset.left + ew - (containerOffset.left + cw + (parseFloat(util.css(container, 'borderRightWidth')) || 0)) + offsetRight,\n      top: elemOffset.top + eh - (containerOffset.top + ch + (parseFloat(util.css(container, 'borderBottomWidth')) || 0)) + offsetBottom\n    };\n  }\n\n  if (diffTop.top < 0 || diffBottom.top > 0) {\n    // 强制向上\n    if (alignWithTop === true) {\n      util.scrollTop(container, containerScroll.top + diffTop.top);\n    } else if (alignWithTop === false) {\n      util.scrollTop(container, containerScroll.top + diffBottom.top);\n    } else {\n      // 自动调整\n      if (diffTop.top < 0) {\n        util.scrollTop(container, containerScroll.top + diffTop.top);\n      } else {\n        util.scrollTop(container, containerScroll.top + diffBottom.top);\n      }\n    }\n  } else {\n    if (!onlyScrollIfNeeded) {\n      alignWithTop = alignWithTop === undefined ? true : !!alignWithTop;\n\n      if (alignWithTop) {\n        util.scrollTop(container, containerScroll.top + diffTop.top);\n      } else {\n        util.scrollTop(container, containerScroll.top + diffBottom.top);\n      }\n    }\n  }\n\n  if (allowHorizontalScroll) {\n    if (diffTop.left < 0 || diffBottom.left > 0) {\n      // 强制向上\n      if (alignWithLeft === true) {\n        util.scrollLeft(container, containerScroll.left + diffTop.left);\n      } else if (alignWithLeft === false) {\n        util.scrollLeft(container, containerScroll.left + diffBottom.left);\n      } else {\n        // 自动调整\n        if (diffTop.left < 0) {\n          util.scrollLeft(container, containerScroll.left + diffTop.left);\n        } else {\n          util.scrollLeft(container, containerScroll.left + diffBottom.left);\n        }\n      }\n    } else {\n      if (!onlyScrollIfNeeded) {\n        alignWithLeft = alignWithLeft === undefined ? true : !!alignWithLeft;\n\n        if (alignWithLeft) {\n          util.scrollLeft(container, containerScroll.left + diffTop.left);\n        } else {\n          util.scrollLeft(container, containerScroll.left + diffBottom.left);\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = scrollIntoView;","'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n\nvar RE_NUM = /[\\-+]?(?:\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/.source;\n\nfunction getClientPosition(elem) {\n  var box = undefined;\n  var x = undefined;\n  var y = undefined;\n  var doc = elem.ownerDocument;\n  var body = doc.body;\n  var docElem = doc && doc.documentElement; // 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式\n\n  box = elem.getBoundingClientRect(); // 注：jQuery 还考虑减去 docElem.clientLeft/clientTop\n  // 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确\n  // 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin\n\n  x = box.left;\n  y = box.top; // In IE, most of the time, 2 extra pixels are added to the top and left\n  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and\n  // IE6 standards mode, this border can be overridden by setting the\n  // document element's border to zero -- thus, we cannot rely on the\n  // offset always being 2 pixels.\n  // In quirks mode, the offset can be determined by querying the body's\n  // clientLeft/clientTop, but in standards mode, it is found by querying\n  // the document element's clientLeft/clientTop.  Since we already called\n  // getClientBoundingRect we have already forced a reflow, so it is not\n  // too expensive just to query them all.\n  // ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的\n  // 窗口边框标准是设 documentElement ,quirks 时设置 body\n  // 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去\n  // 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置\n  // 标准 ie 下 docElem.clientTop 就是 border-top\n  // ie7 html 即窗口边框改变不了。永远为 2\n  // 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0\n\n  x -= docElem.clientLeft || body.clientLeft || 0;\n  y -= docElem.clientTop || body.clientTop || 0;\n  return {\n    left: x,\n    top: y\n  };\n}\n\nfunction getScroll(w, top) {\n  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];\n  var method = 'scroll' + (top ? 'Top' : 'Left');\n\n  if (typeof ret !== 'number') {\n    var d = w.document; // ie6,7,8 standard mode\n\n    ret = d.documentElement[method];\n\n    if (typeof ret !== 'number') {\n      // quirks mode\n      ret = d.body[method];\n    }\n  }\n\n  return ret;\n}\n\nfunction getScrollLeft(w) {\n  return getScroll(w);\n}\n\nfunction getScrollTop(w) {\n  return getScroll(w, true);\n}\n\nfunction getOffset(el) {\n  var pos = getClientPosition(el);\n  var doc = el.ownerDocument;\n  var w = doc.defaultView || doc.parentWindow;\n  pos.left += getScrollLeft(w);\n  pos.top += getScrollTop(w);\n  return pos;\n}\n\nfunction _getComputedStyle(elem, name, computedStyle_) {\n  var val = '';\n  var d = elem.ownerDocument;\n  var computedStyle = computedStyle_ || d.defaultView.getComputedStyle(elem, null); // https://github.com/kissyteam/kissy/issues/61\n\n  if (computedStyle) {\n    val = computedStyle.getPropertyValue(name) || computedStyle[name];\n  }\n\n  return val;\n}\n\nvar _RE_NUM_NO_PX = new RegExp('^(' + RE_NUM + ')(?!px)[a-z%]+$', 'i');\n\nvar RE_POS = /^(top|right|bottom|left)$/;\nvar CURRENT_STYLE = 'currentStyle';\nvar RUNTIME_STYLE = 'runtimeStyle';\nvar LEFT = 'left';\nvar PX = 'px';\n\nfunction _getComputedStyleIE(elem, name) {\n  // currentStyle maybe null\n  // http://msdn.microsoft.com/en-us/library/ms535231.aspx\n  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name]; // 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值\n  // 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19\n  // 在 ie 下不对，需要直接用 offset 方式\n  // borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了\n  // From the awesome hack by Dean Edwards\n  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n  // If we're not dealing with a regular pixel number\n  // but a number that has a weird ending, we need to convert it to pixels\n  // exclude left right for relativity\n\n  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {\n    // Remember the original values\n    var style = elem.style;\n    var left = style[LEFT];\n    var rsLeft = elem[RUNTIME_STYLE][LEFT]; // prevent flashing of content\n\n    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT]; // Put in the new values to get a computed value out\n\n    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;\n    ret = style.pixelLeft + PX; // Revert the changed values\n\n    style[LEFT] = left;\n    elem[RUNTIME_STYLE][LEFT] = rsLeft;\n  }\n\n  return ret === '' ? 'auto' : ret;\n}\n\nvar getComputedStyleX = undefined;\n\nif (typeof window !== 'undefined') {\n  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;\n}\n\nfunction each(arr, fn) {\n  for (var i = 0; i < arr.length; i++) {\n    fn(arr[i]);\n  }\n}\n\nfunction isBorderBoxFn(elem) {\n  return getComputedStyleX(elem, 'boxSizing') === 'border-box';\n}\n\nvar BOX_MODELS = ['margin', 'border', 'padding'];\nvar CONTENT_INDEX = -1;\nvar PADDING_INDEX = 2;\nvar BORDER_INDEX = 1;\nvar MARGIN_INDEX = 0;\n\nfunction swap(elem, options, callback) {\n  var old = {};\n  var style = elem.style;\n  var name = undefined; // Remember the old values, and insert the new ones\n\n  for (name in options) {\n    if (options.hasOwnProperty(name)) {\n      old[name] = style[name];\n      style[name] = options[name];\n    }\n  }\n\n  callback.call(elem); // Revert the old values\n\n  for (name in options) {\n    if (options.hasOwnProperty(name)) {\n      style[name] = old[name];\n    }\n  }\n}\n\nfunction getPBMWidth(elem, props, which) {\n  var value = 0;\n  var prop = undefined;\n  var j = undefined;\n  var i = undefined;\n\n  for (j = 0; j < props.length; j++) {\n    prop = props[j];\n\n    if (prop) {\n      for (i = 0; i < which.length; i++) {\n        var cssProp = undefined;\n\n        if (prop === 'border') {\n          cssProp = prop + which[i] + 'Width';\n        } else {\n          cssProp = prop + which[i];\n        }\n\n        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;\n      }\n    }\n  }\n\n  return value;\n}\n/**\n * A crude way of determining if an object is a window\n * @member util\n */\n\n\nfunction isWindow(obj) {\n  // must use == for ie8\n\n  /* eslint eqeqeq:0 */\n  return obj != null && obj == obj.window;\n}\n\nvar domUtils = {};\neach(['Width', 'Height'], function (name) {\n  domUtils['doc' + name] = function (refWin) {\n    var d = refWin.document;\n    return Math.max( // firefox chrome documentElement.scrollHeight< body.scrollHeight\n    // ie standard mode : documentElement.scrollHeight> body.scrollHeight\n    d.documentElement['scroll' + name], // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？\n    d.body['scroll' + name], domUtils['viewport' + name](d));\n  };\n\n  domUtils['viewport' + name] = function (win) {\n    // pc browser includes scrollbar in window.innerWidth\n    var prop = 'client' + name;\n    var doc = win.document;\n    var body = doc.body;\n    var documentElement = doc.documentElement;\n    var documentElementProp = documentElement[prop]; // 标准模式取 documentElement\n    // backcompat 取 body\n\n    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;\n  };\n});\n/*\n 得到元素的大小信息\n @param elem\n @param name\n @param {String} [extra]  'padding' : (css width) + padding\n 'border' : (css width) + padding + border\n 'margin' : (css width) + padding + border + margin\n */\n\nfunction getWH(elem, name, extra) {\n  if (isWindow(elem)) {\n    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);\n  } else if (elem.nodeType === 9) {\n    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);\n  }\n\n  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n  var borderBoxValue = name === 'width' ? elem.offsetWidth : elem.offsetHeight;\n  var computedStyle = getComputedStyleX(elem);\n  var isBorderBox = isBorderBoxFn(elem, computedStyle);\n  var cssBoxValue = 0;\n\n  if (borderBoxValue == null || borderBoxValue <= 0) {\n    borderBoxValue = undefined; // Fall back to computed then un computed css if necessary\n\n    cssBoxValue = getComputedStyleX(elem, name);\n\n    if (cssBoxValue == null || Number(cssBoxValue) < 0) {\n      cssBoxValue = elem.style[name] || 0;\n    } // Normalize '', auto, and prepare for extra\n\n\n    cssBoxValue = parseFloat(cssBoxValue) || 0;\n  }\n\n  if (extra === undefined) {\n    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;\n  }\n\n  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;\n  var val = borderBoxValue || cssBoxValue;\n\n  if (extra === CONTENT_INDEX) {\n    if (borderBoxValueOrIsBorderBox) {\n      return val - getPBMWidth(elem, ['border', 'padding'], which, computedStyle);\n    }\n\n    return cssBoxValue;\n  }\n\n  if (borderBoxValueOrIsBorderBox) {\n    var padding = extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which, computedStyle) : getPBMWidth(elem, ['margin'], which, computedStyle);\n    return val + (extra === BORDER_INDEX ? 0 : padding);\n  }\n\n  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which, computedStyle);\n}\n\nvar cssShow = {\n  position: 'absolute',\n  visibility: 'hidden',\n  display: 'block'\n}; // fix #119 : https://github.com/kissyteam/kissy/issues/119\n\nfunction getWHIgnoreDisplay(elem) {\n  var val = undefined;\n  var args = arguments; // in case elem is window\n  // elem.offsetWidth === undefined\n\n  if (elem.offsetWidth !== 0) {\n    val = getWH.apply(undefined, args);\n  } else {\n    swap(elem, cssShow, function () {\n      val = getWH.apply(undefined, args);\n    });\n  }\n\n  return val;\n}\n\nfunction css(el, name, v) {\n  var value = v;\n\n  if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {\n    for (var i in name) {\n      if (name.hasOwnProperty(i)) {\n        css(el, i, name[i]);\n      }\n    }\n\n    return undefined;\n  }\n\n  if (typeof value !== 'undefined') {\n    if (typeof value === 'number') {\n      value += 'px';\n    }\n\n    el.style[name] = value;\n    return undefined;\n  }\n\n  return getComputedStyleX(el, name);\n}\n\neach(['width', 'height'], function (name) {\n  var first = name.charAt(0).toUpperCase() + name.slice(1);\n\n  domUtils['outer' + first] = function (el, includeMargin) {\n    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);\n  };\n\n  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n\n  domUtils[name] = function (elem, val) {\n    if (val !== undefined) {\n      if (elem) {\n        var computedStyle = getComputedStyleX(elem);\n        var isBorderBox = isBorderBoxFn(elem);\n\n        if (isBorderBox) {\n          val += getPBMWidth(elem, ['padding', 'border'], which, computedStyle);\n        }\n\n        return css(elem, name, val);\n      }\n\n      return undefined;\n    }\n\n    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);\n  };\n}); // 设置 elem 相对 elem.ownerDocument 的坐标\n\nfunction setOffset(elem, offset) {\n  // set position first, in-case top/left are set even on static elem\n  if (css(elem, 'position') === 'static') {\n    elem.style.position = 'relative';\n  }\n\n  var old = getOffset(elem);\n  var ret = {};\n  var current = undefined;\n  var key = undefined;\n\n  for (key in offset) {\n    if (offset.hasOwnProperty(key)) {\n      current = parseFloat(css(elem, key)) || 0;\n      ret[key] = current + offset[key] - old[key];\n    }\n  }\n\n  css(elem, ret);\n}\n\nmodule.exports = _extends({\n  getWindow: function getWindow(node) {\n    var doc = node.ownerDocument || node;\n    return doc.defaultView || doc.parentWindow;\n  },\n  offset: function offset(el, value) {\n    if (typeof value !== 'undefined') {\n      setOffset(el, value);\n    } else {\n      return getOffset(el);\n    }\n  },\n  isWindow: isWindow,\n  each: each,\n  css: css,\n  clone: function clone(obj) {\n    var ret = {};\n\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        ret[i] = obj[i];\n      }\n    }\n\n    var overflow = obj.overflow;\n\n    if (overflow) {\n      for (var i in obj) {\n        if (obj.hasOwnProperty(i)) {\n          ret.overflow[i] = obj.overflow[i];\n        }\n      }\n    }\n\n    return ret;\n  },\n  scrollLeft: function scrollLeft(w, v) {\n    if (isWindow(w)) {\n      if (v === undefined) {\n        return getScrollLeft(w);\n      }\n\n      window.scrollTo(v, getScrollTop(w));\n    } else {\n      if (v === undefined) {\n        return w.scrollLeft;\n      }\n\n      w.scrollLeft = v;\n    }\n  },\n  scrollTop: function scrollTop(w, v) {\n    if (isWindow(w)) {\n      if (v === undefined) {\n        return getScrollTop(w);\n      }\n\n      window.scrollTo(getScrollLeft(w), v);\n    } else {\n      if (v === undefined) {\n        return w.scrollTop;\n      }\n\n      w.scrollTop = v;\n    }\n  },\n  viewportWidth: 0,\n  viewportHeight: 0\n}, domUtils);"],"sourceRoot":""}